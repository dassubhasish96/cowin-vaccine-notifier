{"version":3,"sources":["components/shared/Header/largest-vaccine-banner.jpeg","components/shared/Header/header.component.js","components/shared/Footer/footer.component.js","components/Register/register.component.js","components/Register/howtouse.component.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","src","banner","alt","Footer","Register","indianStates","myarray","getInitialState","data","notificationType","pincode","email","minAgeLimit","district","selectedState","selectedDistrict","selectedDistrictName","alertSuccess","alertFailure","errors","handleChange","e","setState","state","target","name","value","closeSuccessAlert","closeFailureAlert","handleStateDropdown","index","fetch","then","resp","json","result","districts","handleDistrictDropdown","nativeEvent","selectedIndex","text","validate","RegExp","test","isEmail","handleSubmit","preventDefault","Object","keys","length","payload","console","log","axios","post","response","success","catch","error","this","Form","onSubmit","FormGroup","Alert","color","isOpen","toggle","class","data-color","type","checked","id","onChange","for","Label","Input","invalid","FormFeedback","disabled","selected","map","district_id","district_name","Button","className","Component","HowToUse","App","Container","Row","Col","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ad246ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/largest-vaccine-banner.68f2be6e.jpeg\";","import React, { Fragment } from 'react';\nimport banner from './largest-vaccine-banner.jpeg';\n\nfunction Header(props) {\n    return (\n        <Fragment>\n            <img src= {banner} alt=\"vaccine banner\" ></img>\n        </Fragment>\n    );\n}\n\nexport default Header;","import React, { Fragment } from 'react';\n\nfunction Footer(props) {\n    return (\n        <Fragment>\n            <hr />\n            <small>&copy; Designed by Subhasish</small>\n        </Fragment>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Form, Input, Label, FormGroup, FormFeedback, Button, Alert } from 'reactstrap';\nimport { isEmail } from 'validator';\nimport axios from 'axios'\nimport './toggle-radios.css'\n\n\n\nclass Register extends Component {\n\n indianStates = {\n     myarray : [\"Andaman And Nicobar Islands\", \"Andhra Pradesh\",\"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chandigarh\",\"Chhattisgarh\",\"Dadra And Nagar Haveli\",\"Delhi\",\"Goa\",\"Gujarat\",\n    \"Haryana\",\"Himachal Pradesh\",\"Jammu And Kashmir\",\"Jharkhand\",\"Karnataka\",\"Kerala\",\"Ladakh\",\"Lakshadweep\",\"Madhya Pradesh\",\"Maharashtra\",\"Manipur\",\"Meghalaya\",\"Mizoram\",\"Nagaland\",\"Odisha\",\"Puducherry\",\"Punjab\",\"Rajasthan\",\n\"Sikkim\",\"Tamil Nadu\",\"Telangana\",\"Tripura\",\"Uttar Pradesh\",\"Uttarakhand\",\"West Bengal\",\"Daman And Diu\"]\n }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getInitialState();\n    }\n\n    getInitialState = () => ({\n        data: {\n            notificationType : 'p',\n            pincode: '',\n            email: '',\n            minAgeLimit: 'YO',\n            district: [],\n            selectedState: '-1',\n            selectedDistrict: '-1',\n            selectedDistrictName: '-1',\n            alertSuccess: false,\n            alertFailure: false\n        },\n        errors: {}\n    });\n\n    handleChange = (e) => {\n        this.setState({\n            data: {\n                ...this.state.data,\n                [e.target.name]: e.target.value\n            },\n            errors: {\n                ...this.state.errors,\n                [e.target.name]: ''\n            }\n        });\n    }\n\n    closeSuccessAlert = (e) => {\n        this.setState({\n            data: {\n                ...this.state.data,\n                alertSuccess: false\n            },\n            errors: {\n                ...this.state.errors,\n            }\n        });\n    }\n\n    closeFailureAlert = (e) => {\n        this.setState({\n            data: {\n                ...this.state.data,\n                alertFailure: false\n            },\n            errors: {\n                ...this.state.errors,\n                [e.target.name]: ''\n            }\n        });\n    }\n\n    \n\n    handleStateDropdown = (e) => {\n        let index = e.target.value;\n        fetch('https://cdn-api.co-vin.in/api/v2/admin/location/districts/'+index).then((resp)=>{\n            resp.json().then((result)=>{\n                this.setState({\n                    data: {\n                        ...this.state.data,\n                        district: result.districts,\n                        selectedState: index,\n                        selectedDistrict: '-1'\n                    },\n                    errors: {\n                        ...this.state.errors,\n                        selectedState: ''\n                    }\n                });\n            })\n        })\n\n    }\n\n    handleDistrictDropdown = (e) => {\n        var index = e.nativeEvent.target.selectedIndex;\n        this.setState({\n            data: {\n                ...this.state.data,\n                selectedDistrict: e.target.value,\n                selectedDistrictName: e.nativeEvent.target[index].text\n            },\n            errors: {\n                ...this.state.errors,\n                selectedDistrict: ''\n            }\n        });\n    }\n\n\n    validate = () => {\n        const { data } = this.state;\n        let errors = {};\n        if(data.notificationType === 'p'){\n            var re = new RegExp(\"^[1-9][0-9]{5}$\");\n            if (!re.test(data.pincode)) errors.pincode = 'Pincode must be valid';\n            if (data.pincode === '') errors.pincode = 'Pincode can not be blank';\n        } else {\n            if (data.selectedState === '-1') errors.selectedState = 'Please select state';\n            if (data.selectedDistrict === '-1') errors.selectedDistrict = 'Please select district';\n        }\n\n        if (!isEmail(data.email)) errors.email = 'Email must be valid';\n        if (data.email === '') errors.email = 'Email can not be blank';\n  \n\n        return errors;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { data } = this.state;\n\n        const errors = this.validate();\n\n\n        if (Object.keys(errors).length === 0) {\n            //Call an api here\n            let url = \"http://localhost:9090/notification\";\n            let payload;\n            if(data.notificationType === 'p'){\n                  payload = {\n                    \"notificationType\" : \"p\",\n                    \"data\" : data.pincode,\n                    \"email\": data.email,\n                    \"minAgeLimit\" : data.minAgeLimit,\n                    \"distName\" : ''\n                };\n            } else {\n                 payload = {\n                    \"notificationType\" : \"d\",\n                    \"data\" : data.selectedDistrict,\n                    \"email\": data.email,\n                    \"minAgeLimit\" : data.minAgeLimit,\n                    \"distName\" : data.selectedDistrictName\n                };\n            }\n\n            console.log(payload);\n            axios.post(url, payload).then(response =>{\n                console.log(response.data.success);\n                if(response.data.success){\n                    this.setState({\n                        data: {\n                            ...this.state.data,\n                            alertSuccess: true\n                        \n                        },\n                        errors: {\n                            ...this.state.errors,\n                        }\n                    });\n                }\n                else {\n                     this.setState({\n                        data: {\n                            ...this.state.data,\n                            alertFailure: true\n                        \n                        },\n                        errors: {\n                            ...this.state.errors,\n                        }\n                    });\n                }\n            }).catch(error => {\n                this.setState({\n                    data: {\n                        ...this.state.data,\n                        alertFailure: true\n                    \n                    },\n                    errors: {\n                        ...this.state.errors,\n                    }\n                });\n            })\n            \n\n            //Resetting the form\n            this.setState(this.getInitialState());\n        } else {\n            this.setState({ errors });\n        }\n    }\n\n    render() {\n        const { data, errors } = this.state;\n        return (<div>\n\n            <Form onSubmit={this.handleSubmit}>\n            <FormGroup>\n                <Alert color=\"success\" isOpen = {data.alertSuccess} toggle = {this.closeSuccessAlert} >Notification added successfully !!</Alert>\n                <Alert color=\"danger\" isOpen = {data.alertFailure} toggle = {this.closeFailureAlert} >Some error occured, please try after some time !!</Alert>\n            </FormGroup>\n\n            <FormGroup>\n                <div class=\"toggle-radio\" data-color=\"blue\">\n            <input type=\"radio\" value = \"p\" checked = {data.notificationType === \"p\"} name=\"notificationType\" id = \"notificationTypeP\" onChange = {this.handleChange}/>\n            <label for = \"notificationTypeP\">Notify by pincode</label>\n            <input type=\"radio\" value = \"d\" checked = {data.notificationType === \"d\"} name=\"notificationType\" id = \"notificationTypeD\" onChange = {this.handleChange}/>\n            <label for = \"notificationTypeD\">Notify by district</label>\n            </div>\n            </FormGroup>\n            { data.notificationType ==='p' ?\n            <div>\n            <FormGroup>\n                    <Label for=\"pincode\"><b>Pincode</b></Label>\n                    <Input id=\"pincode\" value={data.pincode} invalid={errors.pincode ? true : false} name=\"pincode\" onChange={this.handleChange} />\n                    <FormFeedback>{errors.pincode}</FormFeedback>\n                </FormGroup>\n             </div>\n             :\n             <div>\n                <FormGroup>\n                <Label for=\"selectedState\"><b>State</b></Label>\n                <Input type = \"select\" onChange = {this.handleStateDropdown} invalid={errors.selectedState ? true : false} name = \"selectedState\">\n                   <option disabled selected = {data.selectedState ===\"-1\"}>Select State</option>\n                    {this.indianStates.myarray.map((state, index)=> (\n                        <option value = {index + 1}>{state}</option>\n                    ))}\n                </Input>\n                <FormFeedback>{errors.selectedState}</FormFeedback>\n\n                </FormGroup>\n\n\n                <FormGroup>\n                <Label for=\"selectedDistrict\"><b>District</b></Label>\n                <Input type = \"select\" onChange = {this.handleDistrictDropdown} invalid={errors.selectedDistrict ? true : false} name = \"selectedDistrict\">\n                <option disabled selected = {data.selectedDistrict ===\"-1\"}>Select District</option>\n                    {this.state.data.district.map((district)=> (\n                        <option value ={district.district_id}> {district.district_name}</option>\n                    ))} \n                </Input>\n                <FormFeedback>{errors.selectedDistrict}</FormFeedback>\n\n                </FormGroup>\n                </div>\n                }\n\n                <FormGroup>\n                    <Label for=\"email\"><b>Email</b></Label>\n                    <Input id=\"email\" value={data.email} invalid={errors.email ? true : false} name=\"email\" onChange={this.handleChange} />\n                    <FormFeedback>{errors.email}</FormFeedback>\n                </FormGroup>\n\n            \n                <FormGroup >\n                <Label for=\"minAgeLimit\"><b>Age</b></Label>\n        </FormGroup>\n        <FormGroup >\n\n        <div class=\"toggle-radio\" data-color=\"blue\">\n            <Input type=\"radio\" value = \"YO\" checked = {data.minAgeLimit === \"YO\"} name=\"minAgeLimit\" id = \"minAgeLimitYO\" onChange = {this.handleChange}/>\n            \n            <Label for = \"minAgeLimitYO\"> All age</Label>\n       \n            <Input type=\"radio\" value = \"Y\" checked = {data.minAgeLimit === \"Y\"} name=\"minAgeLimit\" id = \"minAgeLimitY\" onChange = {this.handleChange}/>\n            \n            <Label for = \"minAgeLimitY\"> 18 - 44 </Label>\n          \n            <Input type=\"radio\" value = \"O\" checked = {data.minAgeLimit === \"O\"} name=\"minAgeLimit\" id = \"minAgeLimitO\"  onChange = {this.handleChange}/>\n       \n            <Label for = \"minAgeLimitO\"> 45+ </Label>\n            </div>\n            </FormGroup>\n\n\n                <Button className=\"submit\" color=\"primary\">Register</Button>\n            </Form>\n            </div>\n        );\n    }\n}\n\nexport default Register;","import React, { Fragment } from 'react';\n\nfunction HowToUse(props) {\n    return (\n        <Fragment>\n            <br/>\n            <h5>About this website ?</h5>\n            When vaccination slots are not available in any location in India, no need to check cowin website again and again for\n            availability. You can add notification for that location here and you will be notified by email when vaccination slots will \n            be available for that location.<br/><br/>\n            <h5>How to use this this website ?</h5>\n            There are two types of notification, by pincode and by district. Enter pincode or select state/district and enter email, minimum age limit\n            then submit. You will get email notification when vaccination slots will be available for that pin/district.<br/><br/>\n            <h5>What is age filter ?</h5>\n            Selecting all age will notify centers with 18+ age and also centers with 45+ age. But selecting 18 - 44 or 45+ alone will notify \n            centers with that age only.\n           \n        </Fragment>\n    );\n}\n\nexport default HowToUse;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Header from './components/shared/Header/header.component';\nimport Footer from './components/shared/Footer/footer.component';\nimport Register from './components/Register/register.component';\nimport HowToUse from './components/Register/howtouse.component';\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Header />\n        </Col>\n      </Row>\n\n\n      <Row>\n      <Col md={6}>\n          <Register />\n        </Col>\n        <Col md={6}>\n        <HowToUse />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Footer />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}